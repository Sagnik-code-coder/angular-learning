Chapter 1 Install Process ---
Download Node js 20.10.0
Install Node js
now run npm install -g @angular/cli
to run the sever using following command
ng serve 
ng serve --o OR ng s --o to open directly in browser
ng build to build the application
...........................................................................................................
Chapter 2 Important Files in the application

Notes: When the application is started to run main.ts file is loaded atfirst
Notes: For global css we use styles.css
Notes: index.html is the common html page  

1) Package.json -- All required Package details are mentioned here 

2) Difference b/w devDependencies vs dependencies
devDependencies don't deploy with the solution it's just use to write the code for developer
dependencies are deployed with the solution

3)angular.json -- Angular related details are mentioned here

4).angular is used for cache 
5) public folder is used for using image,logo
6) src folder is used for writing the code
............................................................................................................
Chapter 3 Declare var and function in Angular js
Notes: Always Declare var inside the class 
Constructor(){} --- It's used by default 
 name:string = "Sagnik";
 input = "test";

 to acces the value we use 

 this.name 
///// Declare function

alertMessage(message:string)
{
  alert(message);
}

.............................................................................................................

Chapter 4 Components in Angular
First create Component Folder in the solution then redirect to the folder After,
To create Components in Angular we use below command
step1-
ng generate components ComponentsName
OR
ng g c ComponentsName

step2-
In the appcomponent.ts file include component name in import section

step3-
Call the component as a html tag in appcomponent.html 

step 4-
@Component({
  selector: 'app-add-emp',  //unique name it's used to import in appcomponent.ts file
  standalone: true, // New Feature from Angular 17 this means all Components are independent
  imports: [],
  templateUrl: './add-emp.component.html', // we can add html also here for that we use template
  styleUrl: './add-emp.component.css' // same as html 
})

1) Components are the building blocks of Angular application
2) Components are used to display data on the UI
.........................................................................................................
Chapter 5 Data Binding in Angular js

There are 2 ways to Data Binding ------------
1)One way Data Binding
2)Two way Data Binding

One way Data Binding----
(i) Using Interpolation ----- {{}} ------   to transfter data from .ts file to .html
(ii) Using Property Binding ----- <div [class] = "className">Some text....</div> ----- to transfter data from .ts file to .html
(iii) Using Event Binding ----- to transfter data from .html to .ts 

step 1- Declare a function in .ts file
alertMessage(message:string)
{
  alert(message);
}
step 2 Call the function
<button (click)="alertMessage('Hello')">Press here</button>

_____________________________________________________________________________________________________________
Two way Data Binding----
(i) Using NgModel Directive --- This feature helps us to comunicate between .ts and .html togetherly.
Notes: Mainly use for input taken from user or dropdownn list

Step 1-
import FormModule in the component where user use to two way Binding

step 2-
in html use this
<input type="text" [(NgModel)]/>  [()] -- this is called bannana bracket
_____________________________________________________________________________________________________________
Signal ---- It's new data binding method implement After Angular 17 or updated version
In .ts file
name = signal("Tukai");
to set the value in Signal use
this.name.set("Bubai");
In .html file
{{name()}}  use this to access
______________________________________________________________________________________________________________
Chapter 6 Directives
There are 2 type directives 
1)Structural Directives (*ngIf,*ngFor)
2)Attribute Directives (ngClass,ngStyle)

1)Structural Directives
*ngIf="True/False" only accept T/F based on that show or hide the element
Notes: To use this we have to import in .ts file CommonModule
.....................................................................................
*ngFor="let item of items" use this to loop through the array 
<li *ngFor="let city of selectedStateList"> {{selectedStateList}}</li>
Notes: To use this we have to import in .ts file FormsModule
Mainly use to loop through array and show the option in the dropdown list
.....................................................................................
2)Attribute Directives
ngClass="className" use this to add style in the element using ternary operator
ngStyle ="styleName" use this to fetch the style from the backend
_____________________________________________________________________________________________________________
Chapter 7 Routing
Routing is a process of navigating from one page to another page in angular application

Step of Routing--------------
1) Under app.routes.ts file add the following parameter
   {
    path:'any name can be given',
    component:'component class name'
   }
2) import RouterLink in the app.component.ts 
3) add the html code in app.component.html with RouterLink <li><a routerLink="Path mentioned in app.routes">Structural Directive</a></li>
4) Finally add the below code Component in the app.component.html
<div class="container">
<router-outlet></router-outlet>
</div>

2 ways to redirect from one Component to another component 
1)html based routing (above mentioned process)
2).ts file based routing 
(i)declare a function inside .ts file 
(ii) Add dependency injection Router service this way
constructor(private router:Router)
{

}
(iii)In function call it for routing
reloadPage()
{this.router.navigateByUrl(['path'])}
(iv) 
<button (click)="reloadPage()"></button>

_____________________________________________________________________________________________________________
Chapter 8 Control Flow (New Feature started from Angular 17)
Control Flow is a new feature in Angular 17, which allows you to control the flow of your application using 
@if()
{

}
@else
{

}
_____________________________________________________________________________________________________________
Chapter 9 Pipes
Pipes are used to transform the data in angular application
default pipes are lowerCase,Uppercase,Date,json,async etc.
To Use default pipe follow these steps.
1)import CommonModule in the .ts file
2)use the pipe in the html file <h2>After Using Pipe {{name | lowercase}}</h2>


We can create custom pipes also.
To create custom pipe follow these steps
1) use this below command
    ng g p PipeName
2) import the pipe name in the .ts file where to use custom pipe
3) write any logic under transform function in custom pipe 
4)in html use custom pipe <h3>After using Custom pipe print object value {{student.City | PipeName}}</h3> 

Notes: Interview Question
1) Can we directly print object in html?
Answer: No, we can't directly print object in html. We need to use json pipe for this

2) In custom pipe which function is used by default?
Answer: transform function is used by default in custom pipe.

_____________________________________________________________________________________________________________
Chapter 10 Forms & Validation Forms 
Forms are used to collect user input in angular application
Steps to create Form and validate forms-----
1) import FormsModule in the .ts file
2) create form in html file using form tag
3) 
_____________________________________________________________________________________________________________
Chapter 11 Get API call
API call is used to fetch data from server in angular application
Steps to make API call
1) Add provideHttpClient() in app.config.ts file
2) in component.ts file inject httpClient 
syntax: http = inject(HttpClient); or you can do using constructor
3) use http.get() method to make API call
4) use subscribe() method to get response from API call
syntax: this.http.get('api_url').subscribe((res:any) =>
{
 console.log(res); 
 this.users = res; // show the list of users
})

To see the list of user
users: list = [];  // see line no. 214

in html call this in below way
@for(us of users; track $index)
{
  <div>{{us}}</div>
} 
_____________________________________________________________________________________________________________
Chapter 12 Post API Call
Steps to make API call
1) Add provideHttpClient() in app.config.ts file
2) in component.ts file inject httpClient 
syntax: http = inject(HttpClient);
3) use http.post() method to make API call
4) data: any =
{
  "name": "",
  "email": ""
}
5) use subscribe() method to get response from API call
syntax: this.http.post('api_url', this.data).subscribe((res:any) =>
{
  console.log(res);
  alert("New User Added");
}
)
_____________________________________________________________________________________________________________
Chapter 13 Service in Angular
Service is used to share data between components in angular application
We use service to get reuse facility 
To generate service write the below command ----
ng generate service serviceName / ng g s serviceName
In service we write just api code.
subscribe method is used in component to get the data 
step 1 
i) inject the service 
ii) call the method of service in component
  export class GetServiceService {

  constructor(private http: HttpClient) { }
  getUser1(){
    return this.http.get('https://jsonplaceholder.typicode.com/todos/1');
  }
}
iii) In component inject the service
     constructor(private getServ: GetServiceService) { }
iv) Call the method define in service with subscribe 
    getUser21()
    {
      this.getServ.getUser().subscribe((res:any)) =>  // here getServ.getUser() is getting from service file
      {
        console.log(res);
      });
    }
Interview Question
Can we store data in servcie ?
Answer: Yes we can store data in service.
_______________________________________________________________________________________________________________
